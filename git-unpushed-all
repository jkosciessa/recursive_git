#!/bin/sh
#
# Description:
#   Update all local branches, checking out each branch in succession. 
#   Eventually returns to the original branch. Use "-n" for dry-run.
#   (inspired from http://stackoverflow.com/a/17180894/51264)
#
#   Performs the following:
#   1. stash away all pending changes
#   2. prune obsolete tracking branches
#   3. git pull on all tracking branches 
#   4. pop back all changes
#   5. open sourcetree      

#
# Install:
#   install as file 'git-pull-all' into ~/bin/git/ and add ~/bin/git/ to your PATH or simply execute the command below:
#   mkdir -p ~/bin/git >/dev/null && curl -o ~/bin/git/git-pull-all -fsSL https://gist.githubusercontent.com/eeichinger/1044107a1126901249b1164dac2fce15/raw/git-pull-all && echo '\nNow ensure ~/bin/git is added to your path!'
#
# Usage:
#   git pull-all [-n|--dryrun] [-s|--sourcetree]

git_unpushed_all() {
  local run currentBranch log res

  [[ "$1" = "-n" || "$1" = "--dryrun" ]] && shift && run=echo
  
  currentBranch=$(git name-rev --name-only HEAD 2>/dev/null)

  $run git fetch --all
  
  for x in $( git branch | cut -c3- ) ; do
#     echo ">>> Checking `pwd` git:($x)"
     $run git checkout $x &>/dev/null
     log=$(git --no-pager log origin/$x.. 2>/dev/null)
     res=$?
#    echo "res=${res}"		 
#    echo "#log=${#log}"
#    echo "$log"
		 if [[ "$res" -eq 0 && "${#log}" -gt 0 ]]; then 
			 echo ">>> Branch '$x' has unpublished updates:"
			 echo "$log"
		 fi
  done

  [ ${#currentBranch} -gt 0 ] && $run git checkout "$currentBranch" >/dev/null 2>&1
}

git_unpushed_all "$@"